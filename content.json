{"meta":{"title":"辉鸭蛋の壹亩地","subtitle":null,"description":null,"author":"huiyadanli","url":"http://huiyadanli.github.io"},"pages":[{"title":"友情链接","date":"2018-05-19T11:59:09.000Z","updated":"2018-05-19T12:34:40.137Z","comments":true,"path":"friends/index.html","permalink":"http://huiyadanli.github.io/friends/index.html","excerpt":"","text":"暂时没啥链接… MWB日常笔记 博客主题的模仿对象，擅自把链接贴过来了⁄(⁄ ⁄•⁄ω⁄•⁄ ⁄)⁄"},{"title":"标签","date":"2017-01-06T17:05:10.000Z","updated":"2017-01-14T10:22:30.862Z","comments":true,"path":"tags/index.html","permalink":"http://huiyadanli.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"nazo.moe 解谜小游戏攻略","slug":"nazo-ctf","date":"2018-05-23T12:42:00.000Z","updated":"2018-06-02T02:27:46.000Z","comments":true,"path":"代码/nazo-ctf/","link":"","permalink":"http://huiyadanli.github.io/代码/nazo-ctf/","excerpt":"据说是类似 CTF 题的东东，一不小心玩了很多关，觉着挺有趣的，顺便把攻略写写下来。地址：https://nazo.moe/","text":"据说是类似 CTF 题的东东，一不小心玩了很多关，觉着挺有趣的，顺便把攻略写写下来。地址：https://nazo.moe/ 题1 欢迎用到的工具：一双明亮的眼睛答案就写在页面上，颜色很淡。。。实在看不清就看源码好了。。。 key: welcome 题2 F12用到的工具：F12F12 看 console key: c0nso1e 题3 Git用到的工具：Git Bash页面上只有一张 git 的 logo，下载下来扩展名改成 zip 试试，发现是个本地的 git 仓库。解压出来是一个空白文件名的文件和一个 .git 的文件夹，文件里面是空白的字符，翻了下 .git 文件夹中的内容，发现有两个分支（master 与 owo）。 在 Git Bash 中输入 git branch 确认下123$ git branch* master owo 果然有两个分支，切换到 owo 分支试试（分支名这么萌真的好么www）12$ git checkout owoSwitched to branch &apos;owo&apos; 然后再看看那个空白文件名的文件的内容。。。 key: g1tbr@nch 题4 Redirect用到的工具：Fiddler跳转的页面抓包1234567891011121314HTTP/1.1 200 OKServer: openresty/1.13.6.1Date: Tue, 15 May 2018 13:20:59 GMTContent-Type: text/htmlContent-Length: 82Connection: keep-aliveLast-Modified: Sat, 12 May 2018 05:03:07 GMTETag: &quot;52-56bfb2b17e0f0-gzip&quot;Accept-Ranges: bytesVary: Accept-EncodingX-Cache: MISS from hkg1.hk.smartgslb.comVia: 1.1 hkg1.hk.smartgslb.com (squid/3.4.9)&lt;script&gt;window.location.href = &quot;https://satori.moe&quot;&lt;/script&gt;&lt;!--key: pK4fJ4Z73D--&gt; key: pK4fJ4Z73D 题5 Simple Authorize用到的工具：Fiddler、F12打开页面提示 403 Forbidden，权限不够。Fiddler 看到请求 Cookie 有个 is_admin=0，Chrome 调出开发者工具 Application 标签下把 Cookie 改成 is_admin=1，再刷新页面就能看到 Key 了。当然用 Fiddler 直接重新发包也可以。 key: c00kie_1s_n0t_5ecure 题6 Bypass GFW用到的工具：Telegram、任意翻墙工具这题简单。。翻着墙点开连接直达 Telegram 就可以了。。。 key: a3o44HGNB6 题7 TXT Record用到的工具：CMD 或者 Shell查询当前域名的 TXT Record 即可1nslookup -qt=txt nazo.moe 12345678&gt; nslookup -qt=txt nazo.moe服务器: public1.alidns.comAddress: 223.5.5.5非权威应答:nazo.moe text = &quot;a2V5OiBITDZtcTdyODJWCg==&quot; 一看就是 Base64，解密得： key: HL6mq7r82V 题8 ASCII Art用到的工具：任意文本编辑器把 # 替换为 换行，1 替换为 11，就是个字符画了。 key: 7YL38 题9 Familiar Sound用到的工具：Adobe Audition听音频是拨号的声音，当时就想到某学生通过拨号声音找出360周鸿祎手机号的事了。搜了相关资料以后找到了声音频率对应号码的表，然后 Au 导入音频，Alt + z 打开频率分析窗口，看每次拨号音频的低频和高频的所对应数字。。。 结果是：89#57#65#105#122#55（真是个体力活）然后输入居然不对，在看了一眼应该是 ASCII 编码的，以 # 作为间隔。解码得到： key: Y9Aiz7 题10 条件判断用到的工具：百度PHP 不熟悉，研究了半天没找到 id 到底该等于多少，遂百度之。访问 https://nazo.moe/assets/nazo/key.php?id[]=1 即可。 key: 3hmrt6P 题11 Where is Key?用到的工具：Fiddler点击链接，看了眼 Response。1234567891011121314HTTP/1.1 200 OKServer: openresty/1.13.6.1Date: Tue, 15 May 2018 05:39:08 GMTContent-Type: text/htmlConnection: keep-alivePoweredBy: Hostker App ServiceKey: An8mtE9q47CpuTime: 0Vary: Accept-EncodingX-Cache: MISS from hkg4.hk.smartgslb.comVia: 1.1 hkg4.hk.smartgslb.com (squid/3.4.9)Content-Length: 15Key is Not Here key: An8mtE9q47 题12 Private Repository用到的工具：Git Bash提示是个带密码的私钥，不知道要不要解密，我反正在[http://tool.chacuo.net/cryptrsapassclear](http://tool.chacuo.net/cryptrsapassclear)解密了私钥。然后 ssh-add 了这个私钥，接着就可以 git clone git@github.com:komeiji-satori/nazo.git 。里面文件保存着 Key。 key: f463X4njxk 题13 Swap File用到的工具：任意16进制编辑器linux 文本的交换文件，原以为要去 linux 下构造一下。。结果习惯性的用 EmEditor 看了一眼就看到 Key 了 key: 38ayyke64Z 题14 Encryped Video用到的工具：FFmpeg修改 frame.m3u8 加上一行 #EXT-X-KEY:METHOD=AES-128,URI=&quot;http://127.0.0.1:8000/key.m3u8&quot;,IV=0x00000000000000000000000000000001由于 FFmpeg 的某种白名单机制我把 key 改名成 key.m3u8，并在本地建立简单的 http 服务器用于访问这个 key。即http://127.0.0.1:8000/key.m3u8。然后用 FFmpeg 合并输出 mp4 即可。1ffmpeg.exe -protocol_whitelist &quot;crypto,file,http,https,tcp,tls&quot; -i frame.m3u8 -c copy frame.mp4 打开 mp4： key: uoy99gCm32 题15 Pixel用到的工具：任意编程语言看了 json 数据内容配合标题，肯定又是像素画。处理 json 最好用的当人是 js 啦，直接在浏览器里执行：12345678var json = &#123;...&#125;for(i = 1; i &lt; json.h; i++) &#123; var line = \"\"; for(j = 1; j &lt; json.w; j++) &#123; line += json.pixel[i][j]; &#125; document.write(line + \"\\n\");&#125; 看上去是个二维码，查找替换，处理一下。PS 二值化，然后扫一扫~ key: 2k28a7yE 题16 Element用到的工具：F12看标题是和网页元素相关联的东西，但是和以前关卡的网页对比，毫无区别呐。。最后发现 app.css 里面的 .nazo-hint 样式里面的背景图有问题。。。下载下来用文本文档打开即可。。。这个样式在前几关就注意到了，然后在这一关下意识忽略了。。。 key: 24xKwQ32 题17 Script用到的工具：F12上一题是元素，这一题是脚本，看源码和提示，直接断点执行 js 就能看到答案了。 key: 26JN6zY6 题18 Weak Type用到的工具：任意发送请求工具php 的题，百度之，得知 0==&quot;admin&quot; 这种形式可以绕过 key 的判断。发送 POST 请求 message={&quot;key&quot;:0} 就能得到 key 了 key: Y8k736Py 题19 Doki Doki Literature Club!链接点进去就能看到 key 了。。 key: just^monika&amp;","categories":[{"name":"代码","slug":"代码","permalink":"http://huiyadanli.github.io/categories/代码/"}],"tags":[{"name":"CTF","slug":"CTF","permalink":"http://huiyadanli.github.io/tags/CTF/"},{"name":"解谜","slug":"解谜","permalink":"http://huiyadanli.github.io/tags/解谜/"}]},{"title":"C# WinForm 国际化/本地化/多语化的方法与各种坑","slug":"i18n-in-csharp-winform","date":"2018-04-13T13:20:00.000Z","updated":"2018-04-13T14:56:31.000Z","comments":true,"path":"代码/i18n-in-csharp-winform/","link":"","permalink":"http://huiyadanli.github.io/代码/i18n-in-csharp-winform/","excerpt":"巨硬提供了完整的 WinForm 国际化方案，操作起来也比较简单（坑也比较多），本文主要记录一下国际化中会遇到的一些问题。","text":"巨硬提供了完整的 WinForm 国际化方案，操作起来也比较简单（坑也比较多），本文主要记录一下国际化中会遇到的一些问题。 基本的国际化方案基本的国际化/本地化操作我就不再赘述了，主要涉及以下3点： 窗体文本、图片等内容的国际化（窗体文本） 内部提示文本、时间等区域化内容的国际化（代码文本） 语言的动态切换（不退出程序动态切换语言） 可供参考的文章： i18n-cs C# Winform本地化 坑1：图片资源文件的重复使用一个含有图标的窗体，VS在新建新的语言的资源文件（.resx）的时候会把图标也给复制一份放在里面，然后导致最后编译出来的资源 dll 体积很大。个人的解决方案是： 不在属性窗口配置 Icon 。图标扔到一个资源文件里统一管理，然后直接修改窗体设计文件源码 FormMain.Designer.cs ，加上一行： 1this.Icon = global::PasteEx.Properties.Resources.ico; 删除其他语言资源文件中的 Icon 节点。直接编辑源码，VS是用对应的资源管理器打开的，不好修改。图片内容是 base64 编码的，一下就能找到 123&lt;data name=\"$this.Icon\" type=\"System.Drawing.Icon, System.Drawing\" mimetype=\"application/x-microsoft.net.object.bytearray.base64\"&gt; ...&lt;/data&gt; 具体可以参考我的这个提交 e2f5f94 坑2：无法修改语言 dll 的生成路径这是很多使用过 WinForm 国际化方案的人都会说坑爹的地方，网上有很多相关讨论。 国际化后编译生成出来的程序目录下会出现和语言区域同名文件夹，内有相关的资源 dll 。 数量一多强迫症简直不能忍啊，如图： stackoverflow 搜索一阵以后发现的几个比较靠谱的方案。 参考：Single-assembly multi-language Windows Forms deployment (ILMerge and satellite assemblies / localization) - possible? 使用 ILMerge 或者 ILRepack 把 dll 直接嵌入到主程序 exe 中。两个我都试过，直接合并，反编译看到的内部路径是错误的，exe 无法找到相关的资源 dll 。 使用 AppDomain.CurrentDomain.AssemblyResolve 方法，在找不到 dll 的时候重新指定 dll 位置进行加载。相关解决方案 Costura 。 重写 System.ComponentModel.ComponentResourceManager ，随心所欲的修改生成和加载 dll 的位置与方式，但是方法过于复杂，不推荐。 放弃嵌入到 exe 中，修改 dll 的存放目录，然后增加程序集的解析目录。参考：如何控制 C# 引用 DLL 的位置 我最后无奈的使用了方法 4 ，在 App.config 添加如下内容，然后把那些多语言资源文件夹全扔到了 Language 文件夹下。好歹是清爽了点。 12345&lt;runtime&gt; &lt;assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\"&gt; &lt;probing privatePath=\"Language\" /&gt; &lt;/assemblyBinding&gt;&lt;/runtime&gt; 然而又发现如果程序运行的当前目录下 *.exe.config 不存在的话，这个配置不起效。（我 Release 新版本的时候都是删除这个文件的） 只好采用了一个过时方法来增加程序集的解析目录，在窗体载入前加上这行代码就可以了（Program.cs） 12#pragma warning disable 0618AppDomain.CurrentDomain.AppendPrivatePath(\"Language\");","categories":[{"name":"代码","slug":"代码","permalink":"http://huiyadanli.github.io/categories/代码/"}],"tags":[{"name":"C#","slug":"C","permalink":"http://huiyadanli.github.io/tags/C/"},{"name":"WinForm","slug":"WinForm","permalink":"http://huiyadanli.github.io/tags/WinForm/"},{"name":"国际化","slug":"国际化","permalink":"http://huiyadanli.github.io/tags/国际化/"}]},{"title":"恶俗古风生成器 web 版","slug":"e-su-gu-feng","date":"2016-09-07T15:17:00.000Z","updated":"2017-01-25T08:32:26.772Z","comments":true,"path":"代码/e-su-gu-feng/","link":"","permalink":"http://huiyadanli.github.io/代码/e-su-gu-feng/","excerpt":"无意间看到一个生成古风句子东东，感觉生成的东西挺好玩的，于是乎我也撸了一个。","text":"无意间看到一个生成古风句子东东，感觉生成的东西挺好玩的，于是乎我也撸了一个。我所看到的加强版本 https://livc.io/162 跟着撸了一个：传送门 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960var two_chars_words = \"朱砂 天下 杀伐 人家 韶华 风华 繁华 血染 墨染 白衣 素衣 嫁衣 倾城 孤城 空城 旧城 旧人 伊人 心疼 春风 古琴 无情 迷离 奈何 断弦 焚尽 散乱 陌路 乱世 笑靥 浅笑 明眸 轻叹 烟火 一生 三生 浮生 桃花 梨花 落花 烟花 离殇 情殇 爱殇 剑殇 灼伤 仓皇 匆忙 陌上 清商 焚香 墨香 微凉 断肠 痴狂 凄凉 黄梁 未央 成双 无恙 虚妄 凝霜 洛阳 长安 江南 忘川 千年 纸伞 烟雨 回眸 公子 红尘 红颜 红衣 红豆 红线 青丝 青史 青冢 白首 白骨 黄土 黄泉 碧落 紫陌 浅唱 寂灭 无声 邂逅 流年 落寂 叙述 唯爱 晨曦 回忆 错落 迷茫 恬静 默诺 余音 情殇 背殇 落幕 黯然 拾忆 独寂 透彻 水影 浅陌 无垠 似水 流年 深音 铭记 迷遇 暖光 蘩藜 尘宵 磬音 黯伤 醉生 沉静 寂冷 白发\".split(\" \");var four_chars_words = \"情深缘浅 情深不寿 莫失莫忘 阴阳相隔 如花美眷 似水流年 眉目如画 曲终人散 繁华落尽 不诉离殇 一世长安 半世烟尘 落梅似雪 冷月花魂 平湖秋月 蝶恋忆回 秋水伊人 断桥残雪 风动铃心 伊人已逝 望断秋水 似水流年 如花美眷 落晚芳菲 沧山映水 上善若水 匠心独运 倾国倾城 天香国色 浑然一体 如梦如幻 风华绝代 繁华落尽 寂寞如烟 独坐如莲 清风有情 明月可鉴 落花有情 流水可懂 流星有情 星空可睹 红颜有梦 陌上花开 弦断花落 似水流年 物是人非 昔云楚楚 紫燕悠悠 在水一方 雪殇若兮 燕笑语兮 清风扶柳 夕颜若雪 笑若扶风 凭兰秋思 素兮饶眉 雨夜聆风 月舞神殇 似水流年 此去经年 烟雨平生 宛如红袖 飞泉鸣玉 曾经沧海 谁堪共语 古道西风 流荆默望 往事如烟 静水流深 相濡以沫 笑靥如花 花开堪折 浮生若梦 情非得已 思绪万千 豆寇年华 地老天荒 曲终人散 沧海桑田 柒指流年 灯火阑珊 与子偕老 过眼云烟 生如夏花 尘埃落定 彼岸流年 莫矢莫忘\".split(\" \");var sentence_model = \"xx，xx，xx了xx。 xxxx，xxxx，不过是一场xxxx。 你说xxxx，我说xxxx，最后不过xxxx。 xx，xx，许我一场xxxx。 一x一x一xx，半x半x半xx。 你说xxxxxxxx，后来xxxxxxxx。 xxxx，xxxx，终不敌xxxx。 xx，xxxx，xx，xxxx。 用我xxxx，换你xxxx。\".split(\" \");// random numberfunction getR(num) &#123; return Math.round(Math.random() * num);&#125;// generator sentencefunction getS() &#123; var len1 = sentence_model.length; var len2 = two_chars_words.length; var len3 = four_chars_words.length; var model = sentence_model[getR(len1 - 1)]; var x = 0; while(model.indexOf(\"xxxx\") != -1) &#123; model = replaceS(model, four_chars_words[getR(len3 - 1)]); &#125; while(model.indexOf(\"xx\") != -1) &#123; model = replaceS(model, two_chars_words[getR(len2 - 1)]); &#125; while(model.indexOf(\"x\") != -1) &#123; var one_chars_words = two_chars_words[getR(len2 - 1)].charAt(getR(1)); model = replaceS(model, one_chars_words); &#125; return model;&#125;function replaceS(model, term) &#123; var m = model.split(\"\"); // string -&gt; array var t = term.split(\"\"); var x = 0; for (var i = 0; i &lt; m.length; i++) &#123; if(m[i] == \"x\") &#123; x++; &#125; else &#123; x = 0; &#125; if(x == t.length) &#123; for(var j = 0; j &lt; t.length; j++) &#123; m[i - j] = t[t.length - 1 - j]; &#125; break; &#125; &#125; return m.join(\"\"); //array -&gt; string&#125;function addS() &#123; var $s = $(\"#sentence\"); $s.html($s.html() + \"&lt;p&gt;\" + getS() + \"&lt;\\p&gt;\"); var h = $(document).height()-$(window).height(); $(document).scrollTop(h);&#125;$(function()&#123; setInterval(\"addS()\",1000);&#125;); 字符串替换自己手写了一下。。不是效率最好的写法，我真是懒得思考了。。。","categories":[{"name":"代码","slug":"代码","permalink":"http://huiyadanli.github.io/categories/代码/"}],"tags":[{"name":"Javascript","slug":"Javascript","permalink":"http://huiyadanli.github.io/tags/Javascript/"},{"name":"HTML","slug":"HTML","permalink":"http://huiyadanli.github.io/tags/HTML/"}]},{"title":"动手建造一个自己的 Java 开发环境","slug":"build-java-devleopment","date":"2016-08-13T09:53:00.000Z","updated":"2016-12-18T07:40:54.949Z","comments":true,"path":"软件/build-java-devleopment/","link":"","permalink":"http://huiyadanli.github.io/软件/build-java-devleopment/","excerpt":"做 Java 开发的时候懒得手动配置，于是乎网上下了个 MyEclipse 2015，但软件启动速度实在太慢，乱七八糟不需要的东西也很多，还是决定自己动手折腾一个 Eclipse。顺便把原先的相关软件都迁移到一个地方。","text":"做 Java 开发的时候懒得手动配置，于是乎网上下了个 MyEclipse 2015，但软件启动速度实在太慢，乱七八糟不需要的东西也很多，还是决定自己动手折腾一个 Eclipse。顺便把原先的相关软件都迁移到一个地方。 文件目录全部扔到了 D:\\Programing\\Development\\Java 文件夹下123456├─.m2├─apache-maven-3.3.9├─apache-tomcat-7.0.70├─eclipse└─jdk └─jdk1.8.0_25 软件清单 JDK（1.8.0_25）http://www.oracle.com/technetwork/java/javase/downloads/index.html Eclipse（我用的Mars版，最新版 Neon） http://www.eclipse.org/downloads/ Maven（3.3.9） http://maven.apache.org/download.cgi Tomcat（7.0.70） http://tomcat.apache.org/download-70.cgi JDK 的安装我的JDK原先在C盘，现在移动到了D盘，所以要修改下环境变量。JAVA_HOME 修改成：1D:\\Programing\\Development\\Java\\jdk\\jdk1.8.0_25 Path 内的相关变量保持不变：1%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin; Eclipse 的安装官网上下载下来的是一个在线安装器，而且还不是最新版本的( ╯-_-)╯┴—┴。 Update 以后选择 Eclipse IDE for Java Developers 安装。 安装目录选择 D:\\Programing\\Development\\Java 然后装上 web 开发的相关插件，打开 Help -&gt; Install New Software 在work with 栏中输入 http://download.eclipse.org/releases/mars/ （mars 可以替换成相对应的版本，我用的 Mars 版） 选择 Web 那一块的插件，需要什么选什么。 貌似这么做和直接安装 Eclipse IDE for Java EE Developers 没啥区别。 Maven 的安装下载并解压到 D:\\Programing\\Development\\Java 下， 然后配置环境变量 MAVEN_HOME：1D:\\Programing\\Development\\Java\\apache-maven-3.3.9 Path 内添加：1%MAVEN_HOME%\\bin; 顺便修改一下 Maven 的配置文件 \\apache-maven-3.3.9\\conf\\settings.xml， 在里面添加或修改一条：1&lt;localRepository&gt;D:\\Programing\\Development\\Java\\.m2\\repository&lt;/localRepository&gt; 把仓库移动到 D:\\Programing\\Development\\Java\\.m2\\repository 下（原来默认是存放在C盘的）。 然后设置 Eclipse ：Window -&gt; Preference -&gt; Maven -&gt; Installation -&gt; Add 添加刚刚下载并解压的 Maven 。 Window -&gt; Preference -&gt; Maven -&gt; User Settings 设置 Maven 配置文件 Tomcat 的安装依旧是下载并解压到 D:\\Programing\\Development\\Java 下， 配置环境变量 CATALINA_HOME：1D:\\Programing\\Development\\Java\\apache-tomcat-7.0.70 Path 内添加：1%CATALINA_HOME%\\bin;%CATALINA_HOME%\\lib; 接着安装 Tomcat 的服务，打开CMD，定位到 D:\\Programing\\Development\\Java\\apache-tomcat-7.0.70\\bin 下面运行 service.bat 。 提示安装成功后，可以运行 tomcat7w.exe 启动 Tomcat 。 启动后可以用浏览器打开 http://localhost:8080/ ，成功的话应该能看到一个 Tomcat 的页面。 然后设置 Eclipse ：在 Window -&gt; Preference -&gt; Server -&gt; Runtime Environment 下，添加 Tomcat 。 Web 项目 Run on Server 的时候选择 Tomcat 7 即可使用自己配置的 Tomcat 了。","categories":[{"name":"软件","slug":"软件","permalink":"http://huiyadanli.github.io/categories/软件/"}],"tags":[{"name":"Eclipse","slug":"Eclipse","permalink":"http://huiyadanli.github.io/tags/Eclipse/"},{"name":"Java","slug":"Java","permalink":"http://huiyadanli.github.io/tags/Java/"}]},{"title":"是时候该折腾一下 pelican 的主题了！","slug":"blog-theme-edit","date":"2016-07-06T10:47:00.000Z","updated":"2016-11-20T08:26:12.298Z","comments":true,"path":"日常/blog-theme-edit/","link":"","permalink":"http://huiyadanli.github.io/日常/blog-theme-edit/","excerpt":"最近一直在 NIUX2 的基础上折腾博客的主题，新主题的名字已经想好了，就叫 NIUX2魔改版 (´・ω・)ﾉ。","text":"最近一直在 NIUX2 的基础上折腾博客的主题，新主题的名字已经想好了，就叫 NIUX2魔改版 (´・ω・)ﾉ。 先听首歌吧尝试一下网易云音乐外链播放器 修改记录相比 NIUX2 修改了哪些地方呢？请作者原谅我把原来简洁的主题改成这样… 一眼能看出来的 底部相关信息修改为居中； 导航条内容移到中间，修改了粗细，加入下拉隐藏的效果（headroom.js）； 鼠标点击页面时的特效（增加彩蛋）； 多说样式的修改，embed.js 本地化（然后鼠标悬浮显示多说信息的框框不见了(´இ皿இ｀)）； 页面非选中状态时标题的变化（标题被我吃掉了 (°∀°)ﾉ）； 代码高亮显示样式的修改（monokai），增加行号； 404 页面样式的修改（二次修改后偷用了Karim Maaloul的3D动画，真的好萌）。 多少眼也看不出来的 删除原 CSS 中部分重复代码； 模板页中绝对路径修改为相对路径； 废弃 NIUX2_LIB_* 参数，新增 NIUX2_LIB_FONTAWESOME NIUX2_LIB_JQUERY NIUX2_LIB_BOOTSTRAP_CSS NIUX2_LIB_BOOTSTRAP_JS NIUX2_LIB_HEADEOOM_JS 参数，其实我就是把这些参数每个独立出来了，方便修改为大网站提供的CDN地址； Google Analytics 替换为新版 js ； summary 插件改成最新版的了。 放弃使用原作者写的音乐播放器插件，直接用外链了。 我还想做什么 主页 banner 的添加； 主页文章简介显示样式的修改； 增加关于页面，使用协议页面； 多说增加颜文字表情栏； google 搜索的替换，使用 tipue_search 插件，直接用 js 搜索页面； 无聊小挂件的添加； 也许还会有更多小细节的修改，只为了让我的网站更有趣些。 最后喔，网站的修改参考了一些独立博客的样式，等我改造结束以后再统一列出吧。 我还发现了几个博客小圈子，V2EX，和知乎上也碰巧看到这些人（实在太巧…）。 还有，为什么我一个后端一直在做前端的东西，而且我还乐此不疲啊，【摔","categories":[{"name":"日常","slug":"日常","permalink":"http://huiyadanli.github.io/categories/日常/"}],"tags":[{"name":"主题","slug":"主题","permalink":"http://huiyadanli.github.io/tags/主题/"},{"name":"blog","slug":"blog","permalink":"http://huiyadanli.github.io/tags/blog/"}]},{"title":"在GitHub Contributions上画像素画","slug":"github-contributions","date":"2016-05-14T09:37:00.000Z","updated":"2016-12-18T07:41:01.550Z","comments":true,"path":"软件/github-contributions/","link":"","permalink":"http://huiyadanli.github.io/软件/github-contributions/","excerpt":"只需要用 gh-contributions 设置好要画的图案，然后它就能生成一个 repo ，上传这个 repo 就能看到效果了。","text":"只需要用 gh-contributions 设置好要画的图案，然后它就能生成一个 repo ，上传这个 repo 就能看到效果了。 使用说明直接按照 gh-contributions 作者说的做就可以了。 我在 windows 下使用的时候出乱码提示，不懂 node-js ，所以也没找到原因所在。 然后改用 ubuntu 本地安装 gh-contributions 1234$ git clone https://github.com/IonicaBizau/github-contributions.git$ cd github-contributions$ npm i$ npm start 但是在 npm start 这一步的时候报错 1234&gt; gh-contributions@3.0.1 start /home/huiyadanli/soft/github-contributions&gt; node ./lib/server.jssh: 1: node: not found 一番搜索以后发现 node 命令被更名为 nodejs ，使用这条命令 1nodejs lib/server.js 手动启动就可以使用了。（貌似安装 nodejs-legacy 就不会出现这个问题了） 成功启动后，打开 localhost:9000 尽情的作画吧 画完后点击 Generate repository from data 就会自动生成一个 repo，上传就能看到效果了。 类似软件 gitfiti 这个是 Python 写的，没有用过 Git Draw 最近刚刚发现的，一个 Chrome 插件","categories":[{"name":"软件","slug":"软件","permalink":"http://huiyadanli.github.io/categories/软件/"}],"tags":[{"name":"GitHub","slug":"GitHub","permalink":"http://huiyadanli.github.io/tags/GitHub/"}]},{"title":"C# 浪微博模拟页面解析，提取各条微博内容","slug":"weibo-monitor","date":"2016-04-21T09:03:00.000Z","updated":"2016-12-18T07:41:01.597Z","comments":true,"path":"代码/weibo-monitor/","link":"","permalink":"http://huiyadanli.github.io/代码/weibo-monitor/","excerpt":"本文主要是通过解析页面来提取各条微博的内容和相关信息。","text":"本文主要是通过解析页面来提取各条微博的内容和相关信息。 提取页面下面是一个微博页面的源码段，微博页面采用 BigPipe 网页加载模式，使用 FM.view() 对页面分块加载，让你能更快的看到内容。 这种页面加载模式导致不能直接使用HTML解析器去提取各条微博，使用正则表达式提取的话，工作量又太大。 Ctrl + F 微博正文可以找出各条微博内容都在 &lt;script&gt;FM.view({&quot;ns&quot;:&quot;pl.content.homeFeed.index&quot; 开头的那一行 js 中，这段字符串就是要操作的对象。 观察过后发现 FM.view() 内使用的 Json 格式，果断尝试使用 Newtonsoft.Json 对其中的数据进行反序列化。 先写一个对应其格式的类，格式可以用 在线解析器 查看 1234567891011/// &lt;summary&gt;/// 用于Json解析/// &lt;/summary&gt;public class ViewJson&#123; public string ns &#123; get; set; &#125; public string domid &#123; get; set; &#125; public string[] css &#123; get; set; &#125; public string js &#123; get; set; &#125; public string html &#123; get; set; &#125; &#125; 然后直接使用 Newtonsoft.Json 提供的 JsonConvert.DeserializeObject&lt;T&gt;() 方法反序列化 Json 数据。viewJson.html 就是我需要的内容（各条微博的信息都在里面） 1234 //取出&lt;script&gt;标签内的Json数据string jsonStr = jsStr.Replace(\"&lt;script&gt;FM.view(\", \"\").Replace(\")&lt;/script&gt;\", \"\"); //使用 Newtonsoft.Json 反序列化ViewJson viewJson = JsonConvert.DeserializeObject&lt;ViewJson&gt;(jsonStr); 页面解析C# 解析 HTML 当选 HtmlAgilityPack 找到顶层节点然后使用 XPath 得到自己所需要的数据，这是个体力活，直接给出代码。 12345678910111213141516171819202122232425// 使用 HtmlAgilityPack 解析HTMLHtmlDocument doc = new HtmlDocument();// 载入刚刚得到的 viewJson.htmldoc.LoadHtml(viewJson.html);HtmlNode topNode = doc.DocumentNode.ChildNodes[1];// 我自己定义的 WeiboFeed 类，用于存放微博List&lt;WeiboFeed&gt; wbFeedList = new List&lt;WeiboFeed&gt;();foreach (HtmlNode feedListItem in topNode.ChildNodes)&#123; if (feedListItem.Attributes.Contains(\"action-type\") &amp;&amp; feedListItem.Attributes[\"action-type\"].Value == \"feed_list_item\") &#123; // 微博 mid string mid = feedListItem.Attributes[\"mid\"].Value; // 发送该微博的用户的昵称 string username = feedListItem.SelectSingleNode(\"div[1]/div[@class='WB_detail']/div[1]/a[1]\").InnerHtml; // 发送时间 string time = feedListItem.SelectSingleNode(\"div[1]/div[@class='WB_detail']/div[2]/a[1]\").Attributes[\"title\"].Value; // 微博正文内容 string content = feedListItem.SelectSingleNode(\"div[1]/div[@class='WB_detail']/div[3]\").InnerHtml; WeiboFeed wbFeedTmp = new WeiboFeed(this, mid, username, time, content); wbFeedList.Add(wbFeedTmp); &#125;&#125; 附赠以上东西的应用：微博秒赞器","categories":[{"name":"代码","slug":"代码","permalink":"http://huiyadanli.github.io/categories/代码/"}],"tags":[{"name":"C#","slug":"C","permalink":"http://huiyadanli.github.io/tags/C/"},{"name":"Json","slug":"Json","permalink":"http://huiyadanli.github.io/tags/Json/"},{"name":"Javascript","slug":"Javascript","permalink":"http://huiyadanli.github.io/tags/Javascript/"},{"name":"HTML","slug":"HTML","permalink":"http://huiyadanli.github.io/tags/HTML/"}]},{"title":"C# 实现新浪微博模拟登录v1.4.18","slug":"sina-login","date":"2016-03-10T15:03:00.000Z","updated":"2016-11-20T08:26:07.074Z","comments":true,"path":"研究/sina-login/","link":"","permalink":"http://huiyadanli.github.io/研究/sina-login/","excerpt":"14年暑假写的东西，今天试用了一下发现居然还能用。","text":"14年暑假写的东西，今天试用了一下发现居然还能用。 模拟登录原理1.输入用户名时，发送如下GET请求，返回一大堆登录所需要的参数。其中entry callback rsakt client参数都是固定不变的，su是经过Base64加密后的用户名，checkpin =1时，会返回showpin告诉你是否需要验证码，_很明显是时间戳，没有这个参数也可以正常得到返回信息。 1http://login.sina.com.cn/sso/prelogin.php?entry=weibo&amp;callback=sinaSSOController.preloginCallBack&amp;su=aHVpeWFkYW5saSU0MDEyNi5jb20%3D&amp;rsakt=mod&amp;checkpin=1&amp;client=ssologin.js(v1.4.18)&amp;_=1457524967315 返回信息如下，后面会用到 servertime nonce pcid pubkey rsakv 这几个参数，其中pubkey rsakv的值是固定的（1年多都没变）。还有一个showpin上面已经说到了，告诉你是否需要验证码，此处的值为0是不需要的，频繁登录时会需要验证码。 1234567891011121314 sinaSSOController.preloginCallBack(&#123; \"retcode\": 0, \"servertime\": 1457525116, \"pcid\": \"ja-69837828b9f065232d6ea4a3130fe2cdbd47\", \"nonce\": \"7R4XFC\", \"pubkey\": \"EB2A38568661887FA180BDDB5CABD5F21C7BFD59C090CB2D245A87AC253062882729293E5506350508E7F9AA3BB77F4333231490F915F6D63C55FE2F08A49B353F444AD3993CACC02DB784ABBB8E42A9B1BBFFFB38BE18D78E87A0E41B9B8F73A928EE0CCEE1F6739884B9777E4FE9E88A1BBE495927AC4A799B3181D6442443\", \"rsakv\": \"1330428213\", \"is_openlock\": 0, \"showpin\": 0, \"exectime\": 12 &#125;) 2.自己构造以下数据POST到http://login.sina.com.cn/sso/login.php?client=ssologin.js(v1.4.18)其中su依旧是Base64加密后的用户名，servertime nonce rsakv 字段的值就是刚刚GET得到的值，sp是经过RSA2加密后的密码。其余的值都可以保持不变。这里有一个登录的难点就是RSA2加密，其实加密的方法就在ssologin.js中，直接用C#调用那段RSA2加密的js即可。详细方法：http://www.cnblogs.com/coding1016/archive/2013/03/25/2980310.html ！如果上面一步的返回值showpin=1，则需要GET http://login.sina.com.cn/cgi/pin.php?p=`pcid` 来得到验证码图片（pcid 也来自上一步哟），然后在下面的POST数据中加上pcid door 两个字段，door的值就是验证码的值123456entry = weibo &amp; gateway = 1 &amp; from = &amp; savestate = 7 &amp; useticket = 1 &amp; pagerefer = &amp; vsnf = 1 &amp; su = aHVpeWFkYW5saSU0MDEyNi5jb20 % 3D &amp; service = miniblog &amp; servertime = 1457525116 &amp; nonce = 7R4XFC &amp; pwencode = rsa2 &amp; rsakv = 1330428213 &amp; sp = `加密后的密码` &amp; sr = 1745 * 982 &amp; encoding = UTF - 8 &amp; prelt = 78 &amp; url = http % 3A % 2F % 2Fwww.weibo.com % 2Fajaxlogin.php % 3Fframelogin % 3D1 % 26callback % 3Dparent.sinaSSOController.feedBackUrlCallBack &amp; returntype = META POST以后会返回一个页面，location.replace 后面就是下一步要跳转的页面，其中还有个retcode参数告诉你登录的结果（0-登录成功，2070-验证码错误，4049-验证码为空，101密码错误） 跳转到那个页面，就可以得到登录的cookie，模拟登录完成。 C#实现直接看代码吧：https://github.com/huiyadanli/SinaLogin","categories":[{"name":"研究","slug":"研究","permalink":"http://huiyadanli.github.io/categories/研究/"}],"tags":[{"name":"C#","slug":"C","permalink":"http://huiyadanli.github.io/tags/C/"},{"name":"模拟登录","slug":"模拟登录","permalink":"http://huiyadanli.github.io/tags/模拟登录/"}]},{"title":"成功使用pelican在github上搭建了自己的博客","slug":"build-a-blog","date":"2015-11-23T14:24:00.000Z","updated":"2016-11-20T08:26:15.898Z","comments":true,"path":"日常/build-a-blog/","link":"","permalink":"http://huiyadanli.github.io/日常/build-a-blog/","excerpt":"很久很久以前（3年前），我在BAE上用WordPress搭建过一个blog，上传过几个自己写着玩的软件，顺带一些软件推荐，然后…然后它被我遗忘在某个小角落…欠费致死。","text":"很久很久以前（3年前），我在BAE上用WordPress搭建过一个blog，上传过几个自己写着玩的软件，顺带一些软件推荐，然后…然后它被我遗忘在某个小角落…欠费致死。 未完成的新博客 是什么原因让我又来搞了个博客来糟蹋呢？ 让我那些散落在硬盘角落里的东西重见天日。 顺便折腾下Python，还有提升我那半吊子的前端能力。 提升逼格！（这才是主要原因吧 (╯°Д°)╯︵ ┻━┻ ） 我用了些什么东西来建造博客？ 主机：Github Pages （贱笑） 域名：打算在Godaddy买个，名字叫什么真的好纠结呢。 使用Pelican生成的静态博客，并加装了Ma Wenbao的Niu-X2主题。 容我再折腾折腾。","categories":[{"name":"日常","slug":"日常","permalink":"http://huiyadanli.github.io/categories/日常/"}],"tags":[{"name":"blog","slug":"blog","permalink":"http://huiyadanli.github.io/tags/blog/"},{"name":"pelican","slug":"pelican","permalink":"http://huiyadanli.github.io/tags/pelican/"},{"name":"python","slug":"python","permalink":"http://huiyadanli.github.io/tags/python/"}]},{"title":"QQ消息轰炸机(附源码)","slug":"message-bomber","date":"2013-08-15T06:54:00.000Z","updated":"2017-03-17T06:56:20.789Z","comments":true,"path":"代码/message-bomber/","link":"","permalink":"http://huiyadanli.github.io/代码/message-bomber/","excerpt":"学习VB的成果。","text":"学习VB的成果。 软件界面 介绍 自带3个 喷人宝典 (网上搜来的),支持按行导入导出 TXT文本文档； 两种轰炸模式:单文本轰炸 与 列表轰炸； 可设定攻击时间间隔,不宜过短； 不止是 QQ聊天 中可以用到,任何按 enter键 发送信息的工具都可以用。 使用方法切换到聊天窗口后使用快捷键操作 ( F10 开始 | F11 停止 ) 下载地址软件下载源码下载","categories":[{"name":"代码","slug":"代码","permalink":"http://huiyadanli.github.io/categories/代码/"}],"tags":[{"name":"VB","slug":"VB","permalink":"http://huiyadanli.github.io/tags/VB/"},{"name":"消息轰炸","slug":"消息轰炸","permalink":"http://huiyadanli.github.io/tags/消息轰炸/"}]},{"title":"把文件藏在图片里(VB程序+源码+原理)","slug":"hide-file-in-picture","date":"2013-07-10T08:18:00.000Z","updated":"2017-03-17T06:57:08.236Z","comments":true,"path":"代码/hide-file-in-picture/","link":"","permalink":"http://huiyadanli.github.io/代码/hide-file-in-picture/","excerpt":"初学VB时写的一个小程序…没什么技术含量…捣腾了一下午出来了…主要是利用命令提示符中的一个copy命令,软件的作用只是生成含有这个命令的一个BAT文件并运行…","text":"初学VB时写的一个小程序…没什么技术含量…捣腾了一下午出来了…主要是利用命令提示符中的一个copy命令,软件的作用只是生成含有这个命令的一个BAT文件并运行…1copy /b &quot;D:/1.jpg&quot; + &quot;D:/2.rar&quot; &quot;D:/3.jpg&quot; D:/1.jpg是图片的存放路径；把要藏的文件压缩成2.rar，D:/2.rar是此文件的存放路径；D:/3.jpg是生成路径。 详细方法：传送门 软件图示： 源码：12345678910111213141516171819Private Sub Command3_Click() If Dir(Text1.Text) &lt;&gt; “” = True Then If Dir(Text2.Text) &lt;&gt; “” = True Then Open “c.bat” For Output As #3 Print #3, “Copy/b “; Chr(34) &amp; Text1.Text &amp; Chr(34); ” + “; Chr(34) &amp; Text2.Text &amp; Chr(34); ” #xa0;”; “Output.jpg” Close #3 Shell (“c.bat”) R = MsgBox(“藏好了,输出文件为OutPut.jpg,存放在本程序所在文件夹,按确定打开文件夹.”, vbYesNo, “完成”) If R = vbYes Then Shell “explorer.exe ” &amp; App.Path Else End If Else R2 = MsgBox(“请输入正确要藏的文件路径!”, , “错误”) End If Else R1 = MsgBox(“请输入正确JPG图片文件路径!”, , “错误”) End IfEnd Sub","categories":[{"name":"代码","slug":"代码","permalink":"http://huiyadanli.github.io/categories/代码/"}],"tags":[{"name":"VB","slug":"VB","permalink":"http://huiyadanli.github.io/tags/VB/"},{"name":"隐藏","slug":"隐藏","permalink":"http://huiyadanli.github.io/tags/隐藏/"}]}]}